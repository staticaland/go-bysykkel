* About

#+begin_html
<p>
    <a href="https://github.com/staticaland/go-bysykkel/actions/workflows/test.yml">
        <img alt="Tests" src="https://github.com/staticaland/go-bysykkel/actions/workflows/test.yml/badge.svg" />
    </a>
    <a href="https://github.com/staticaland/go-bysykkel/actions/workflows/build.yml">
        <img alt="Build" src="https://github.com/staticaland/go-bysykkel/actions/workflows/build.yml/badge.svg" />
    </a>
    <a href="https://github.com/staticaland/go-bysykkel/actions/workflows/run.yml">
        <img alt="Run" src="https://github.com/staticaland/go-bysykkel/actions/workflows/run.yml/badge.svg" />
    </a>
    <a href="https://github.com/staticaland/go-bysykkel/actions/workflows/release.yml">
        <img alt="Release" src="https://github.com/staticaland/go-bysykkel/actions/workflows/release.yml/badge.svg" />
    </a>
</p>
#+end_html

CLI and simplified (proxy) REST API server for Oslo City Bike stations.


* Usage

** CLI

Follow the [[https://en.wikipedia.org/wiki/Unix_philosophy][Unix philosophy]] and use =fzf= to filter the output:

#+begin_src sh
bysykkel | fzf --reverse --header-lines=3 --bind 'ctrl-r:reload(bysykkel)'
#+end_src

This also lets you reload the data with Ctrl-R.

You may also consider combining =grep= with =watch= to always know the status of
your nearest bike station.

#+begin_src sh
watch --interval 5 --no-title 'bysykkel | grep Birkelunden'
#+end_src

You could also add it to your status bar (like =i3status= or =polybar=).

** Server

#+begin_src sh
bysykkel-server
#+end_src

* Installation

[[https://github.com/staticaland/go-bysykkel/releases][Check out releases for pre-built binaries]].

** Go

#+begin_src sh
go install ./cmd/bysykkel
go install ./cmd/bysykkel-server
#+end_src

See [[https://github.com/staticaland/go-bysykkel/actions/workflows/run.yml][run.yml for expected behaviour]].


** Homebrew

A Homebrew formula is included at [[./Formula/bysykkel.rb][Formula/bysykkel.rb]].

#+begin_src sh
brew tap staticaland/go-bysykkel https://github.com/staticaland/go-bysykkel
brew install bysykkel
#+end_src

If you watch the project (Watch â†’ Custom â†’ Releases) you can easily upgrade to
the latest version when notified:

#+begin_src sh
brew upgrade bysykkel
#+end_src

To uninstall:

#+begin_src sh
brew uninstall bysykkel
brew untap staticaland/go-bysykkel
#+end_src


* Examples

** All stations

Only showing 3 elements here by filtering with =jq=.

#+begin_src sh :results raw :wrap src json :exports both
curl localhost:4000/v1/stations | jq .stations[0:3]
#+end_src

#+RESULTS:
#+begin_src json
[
  {
    "station_id": "2351",
    "name": "Sogn Studentby",
    "num_bikes_available": 0,
    "num_docks_available": 18
  },
  {
    "station_id": "2350",
    "name": "Blindern T-Bane",
    "num_bikes_available": 8,
    "num_docks_available": 17
  },
  {
    "station_id": "2349",
    "name": "Maritimt Museum",
    "num_bikes_available": 20,
    "num_docks_available": 1
  }
]
#+end_src

** Selecting a particular station

#+begin_src sh :results raw :wrap src json :exports both
curl localhost:4000/v1/stations | jq '.stations[] | select(.name == "Birkelunden")'
#+end_src

#+RESULTS:
#+begin_src json
{
  "station_id": "424",
  "name": "Birkelunden",
  "num_bikes_available": 9,
  "num_docks_available": 1
}
#+end_src

** Route that does not exist

#+begin_src sh :results raw :wrap src json :exports both
curl localhost:4000/foo | jq .
#+end_src

#+RESULTS:
#+begin_src json
{
  "error": "the requested resource could not be found"
}
#+end_src


* Build

#+begin_src sh
make build/cli
make build/server
#+end_src

Binaries will be placed in =./bin=.

See [[https://github.com/staticaland/go-bysykkel/actions/workflows/build.yml][build.yml for expected behaviour]].

* Testing

Run tests with =make quality= (the secret subliminal stimuli: let's make quality
software ðŸš€). Tests are also run in GitHub Actions (CI/CD) on commit to =main=.

You can use =act= ([[https://github.com/nektos/act][act]]) to run workflows too, if you're feeling adventerous.

See [[https://github.com/staticaland/go-bysykkel/actions/workflows/test.yml][test.yml for expected behaviour]].

Read [[https://dave.cheney.net/2019/05/07/prefer-table-driven-tests]["Prefer table driven tests" by Dave Cheney]].

* Logging

Out of scope, but I decided on [[https://github.com/rs/zerolog][Zerolog]] after evaluating a few options[fn:1]. I
just wanted to add a bit more realism, and it's useful keep around for future
projects.

[fn:1] [[https://notes.garden/Cards/%F0%9F%8C%B2+Notes/Structured+logging][Structured logging - notes]]
